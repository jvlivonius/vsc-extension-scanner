# Coverage.py configuration for branch coverage tracking
# https://coverage.readthedocs.io/en/latest/config.html

[run]
# Enable branch coverage (more comprehensive than line coverage)
branch = True

# Source package to measure
source = vscode_scanner

# Omit test files and unimportant modules
omit =
    */tests/*
    */test_*
    */__init__.py
    */vscode_scanner/_version.py
    */vscode_scanner/vscan.py

# Run tests in parallel (if using pytest-xdist)
parallel = False

# Store coverage data in standard location
data_file = .coverage

[report]
# Decimal precision for percentages
precision = 2

# Show lines that weren't executed
show_missing = True

# Don't skip files with 100% coverage
skip_covered = False

# Don't skip files with no executable code
skip_empty = False

# Fail if coverage is below this threshold
# Current baseline: 52% (v3.5.2)
# Aspirational goal: 85%
# Set to 52 to prevent regression while working toward 85% goal
fail_under = 52.0

# Sort report by coverage percentage (lowest first)
sort = Cover

# Exclude lines from coverage
exclude_lines =
    # Standard pragma for excluding lines
    pragma: no cover

    # Don't complain about missing debug code
    def __repr__

    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @abstract

    # Don't complain about type checking blocks
    if TYPE_CHECKING:

    # Don't complain about pass statements
    pass

[html]
# Directory for HTML coverage report
directory = htmlcov

# Title for HTML report
title = VS Code Extension Scanner Coverage Report

# Show contexts in HTML report
show_contexts = False

[xml]
# Output file for XML report (for CI/CD integration)
output = coverage.xml

[json]
# Output file for JSON report (for programmatic access)
output = coverage.json
# Pretty-print JSON
pretty_print = True
# Include source code in JSON
show_contexts = False
