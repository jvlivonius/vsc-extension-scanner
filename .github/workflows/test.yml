name: Tests

on:
  push:
    branches: [ main, master, develop, claude/** ]
  pull_request:
    branches: [ main, master, develop ]

# Cancel in-progress runs when new push occurs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Restrict permissions to minimum required
permissions:
  contents: read

jobs:
  architecture-tests:
    name: Architecture Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -e .[test]

      - name: Run architecture tests
        run: python3 tests/test_architecture.py

      - name: Report architecture test results
        if: always()
        run: |
          echo "Architecture tests completed"
          echo "Check output above for violations"

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -e .[test]

      - name: Run integration tests
        run: |
          if [ -f "tests/test_integration.py" ]; then
            echo "Running integration tests..."
            python3 tests/test_integration.py || true
          else
            echo "No integration tests found"
          fi

  tests-and-coverage:
    name: Tests & Coverage Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install package and dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[test]
          pip install coverage

      - name: Run tests with coverage
        run: |
          echo "Running test suite with branch coverage tracking..."
          coverage run -m pytest tests/ -v --strict-markers
          echo "âœ… Tests complete"

      - name: Generate coverage report
        run: |
          echo ""
          echo "=================================================="
          echo "Coverage Report"
          echo "=================================================="
          coverage report --fail-under=52
          echo ""
          echo "âœ… Coverage threshold met (â‰¥52% baseline)"
          echo "ðŸ“Š Current baseline: 52% | Aspirational goal: 85%"

      - name: Generate HTML coverage report
        if: always()
        run: |
          coverage html
          echo "HTML coverage report generated in htmlcov/"

      - name: Generate XML coverage report (for CI tools)
        if: always()
        run: |
          coverage xml
          echo "XML coverage report generated: coverage.xml"

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            htmlcov/
            coverage.xml
            .coverage
          retention-days: 30

      - name: Upload coverage summary
        if: always()
        run: |
          echo "# Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          coverage report >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
